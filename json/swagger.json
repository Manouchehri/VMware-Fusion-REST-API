{
   "swagger": "2.0",
   "info": {
      "title": "VMware Fusion API 1.0",
      "version": "1.0.0",
      "description": "REST API Explorer",
      "termsOfService": "http://swagger.io/terms/"
   },
   "securityDefinitions": {
      "BasicAuth": {
         "type": "basic"
      }
   },
   "basePath": "/api",
   "schemes": [
      "http",
      "https"
   ],
   "tags": [
      {"name": "VM Management"},
      {"name": "VM Power Management"},
      {"name": "VM Shared Folders Management"},
      {"name": "VM Network Adapters Management"},
      {"name": "Host Network Management"},
      {"name": "Maintenance"}
   ],
   "consumes": [
      "application/vnd.vmware.vmw.rest-v1+json"
   ],
   "produces": [
      "application/vnd.vmware.vmw.rest-v1+json"
   ],
   "paths": {
      "/daemon": {
         "put": {
           "tags": [
               "Maintenance"
            ],
            "summary": "Changes execution state of vmdaemon",
            "operationId": "putDaemonState",
            "parameters": [
               {
                  "name": "state",
                  "in": "body",
                  "description": "State of daemon (on/off)",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/DaemonState"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Daemon execution state",
                  "schema": {
                     "$ref": "#/definitions/DaemonState"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "409": {
                  "description": "Resource state conflicts",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vms": {
         "get": {
           "tags": [
               "VM Management"
            ],
            "summary": "Returns all VMs",
            "operationId": "getAllVMs",
            "responses": {
               "200": {
                  "description": "All VMs' ID and path",
                  "schema": {
                     "type": "array",
                     "items": {
                        "$ref": "#/definitions/VMID"
                     }
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "post": {
           "tags": [
               "VM Management"
            ],
            "summary": "Clones a new VM",
            "operationId": "createVM",
            "parameters": [
               {
                  "name": "params",
                  "in": "body",
                  "description": "Parameters of VM to create",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/VMCloneParameter"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "VM information",
                  "schema": {
                     "$ref": "#/definitions/VMInformation"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such parent VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "409": {
                  "description": "VM already exists",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vms/{id}": {
         "get": {
            "tags": [
               "VM Management"
            ],
            "summary": "Returns information of the VM",
            "operationId": "getVM",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "VM information",
                  "schema": {
                     "$ref": "#/definitions/VMInformation"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "put": {
            "tags": [
               "VM Management"
            ],
            "summary": "Updates the a VM with the new settings",
            "operationId": "updateVM",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "parameters",
                  "in": "body",
                  "description": "VM definition",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/VMParameter"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "VM information",
                  "schema": {
                     "$ref": "#/definitions/VMInformation"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "409": {
                  "description": "Resource state conflicts",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "VM Management"
            ],
            "summary": "Deletes a VM",
            "operationId": "deleteVM",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "VM deleted"
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "409": {
                  "description": "Resource state conflicts",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vms/{id}/power": {
         "get": {
            "tags": [
               "VM Power Management"
            ],
            "summary": "Returns power state of the VM",
            "operationId": "getPowerState",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "VM power state",
                  "schema": {
                     "$ref": "#/definitions/VMPowerState"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "put": {
            "tags": [
               "VM Power Management"
            ],
            "summary": "Changes VM power state",
            "operationId": "changePowerState",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "operation",
                  "in": "body",
                  "description": "VM power operation: on, off, shutdown, suspend, pause, unpause",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/VMPowerOperation"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "VM power state",
                  "schema": {
                     "$ref": "#/definitions/VMPowerState"
                  }
               },
               "304": {
                  "description": "State not modified",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "400": {
                  "description": "Invalid power operation",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "409": {
                  "description": "Resource state conflicts",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vms/{id}/sharedfolders": {
         "get": {
            "tags": [
               "VM Shared Folders Management"
            ],
            "summary": "Returns all shared folders mounted in the VM",
            "operationId": "getAllSharedFolders",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Shared folders mounted in the VM",
                  "schema": {
                     "$ref": "#/definitions/SharedFolders"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "VM Shared Folders Management"
            ],
            "summary": "Mounts a new shared folder in the VM",
            "operationId": "createSharedFolder",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "parameters",
                  "in": "body",
                  "description": "Parameters of the shared folder to mount",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/SharedFolder"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Shared folders mounted in the VM",
                  "schema": {
                     "$ref": "#/definitions/SharedFolders"
                  }
               },
               "304": {
                  "description": "state not modified",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vms/{id}/sharedfolders/{folder id}": {
         "delete": {
            "tags": [
               "VM Shared Folders Management"
            ],
            "summary": "Delete a VM shared folder",
            "operationId": "deleteSharedFolder",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "folder id",
                  "in": "path",
                  "description": "ID of shared folder",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Shared folder deleted"
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such resource",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "put": {
            "tags": [
               "VM Shared Folders Management"
            ],
            "summary": "Updates a shared folder mounted in the VM",
            "operationId": "updataSharedFolder",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "folder id",
                  "in": "path",
                  "description": "ID of VM shared folder",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "parameters",
                  "in": "body",
                  "description": "Parameters of the shared folder to update to",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/SharedFolderParameter"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Shared folders mounted in the VM",
                  "schema": {
                     "$ref": "#/definitions/SharedFolders"
                  }
               },
               "304": {
                  "description": "State not modified",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such resource",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vms/{id}/nic": {
         "get": {
            "tags": [
               "VM Network Adapters Management"
            ],
            "summary": "Returns all network adapters in the VM",
            "operationId": "getAllNICDevices",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "Network adapters in the VM",
                  "schema": {
                     "$ref": "#/definitions/NICDevices"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "post": {
            "tags": [
               "VM Network Adapters Management"
            ],
            "summary": "Creates a network adapter in the VM",
            "operationId": "createNICDevice",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "parameters",
                  "in": "body",
                  "description": "Parameters of network adapter to create",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/NICDeviceParameter"
                  }
               }
            ],
            "responses": {
               "201": {
                  "description": "Information of the network adapter created",
                  "schema": {
                     "$ref": "#/definitions/NICDevice"
                  }
               },
               "304": {
                  "description": "not modified",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "409": {
                  "description": "Resource state conflicts",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vms/{id}/nic/{index}": {
         "delete": {
            "tags": [
               "VM Network Adapters Management"
            ],
            "summary": "Deletes a VM network adapter",
            "operationId": "deleteNICDevice",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "index",
                  "in": "path",
                  "description": "Index of VM network adapter",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "204": {
                  "description": "Network adapter deleted"
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such resource",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "409": {
                  "description": "Resource state conflicts",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "put": {
            "tags": [
               "VM Network Adapters Management"
            ],
            "summary": "Updates a VM network adapter",
            "operationId": "updateNICDevice",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "index",
                  "in": "path",
                  "description": "Index of VM network adapter",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "parameters",
                  "in": "body",
                  "description": "Parameters of network adapter to update to",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/NICDeviceParameter"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Information of the network adapter updated to",
                  "schema": {
                     "$ref": "#/definitions/NICDevice"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such resource",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "409": {
                  "description": "Resource state conflicts",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vms/{id}/ip": {
         "get": {
            "tags": [
               "VM Network Adapters Management"
            ],
            "summary": "Returns IP address of VM",
            "operationId": "getIPAddress",
            "parameters": [
               {
                  "name": "id",
                  "in": "path",
                  "description": "ID of VM",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "VM IP address",
                  "schema": {
                     "type": "object",
                     "required": [
                        "ip"
                     ],
                     "properties": {
                        "ip": {
                           "type": "string",
                           "description": "Guest OS IP address"
                        }
                     }
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such VM",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vmnet": {
         "get": {
            "tags": [
               "Host Networks Management"
            ],
            "summary": "Returns all virtual networks",
            "operationId": "getAllNetworks",
            "responses": {
               "200": {
                  "description": "All virtual networks",
                  "schema": {
                     "$ref": "#/definitions/Networks"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vmnet/{vmnet}/portforward": {
         "get": {
            "tags": [
               "Host Networks Management"
            ],
            "summary": "Returns all port forwardings",
            "operationId": "getPortforwards",
            "parameters": [
               {
                  "name": "vmnet",
                  "in": "path",
                  "description": "NAT type of virtual network",
                  "required": true,
                  "type": "string"
               }
            ],
            "responses": {
               "200": {
                  "description": "All port forwardings",
                  "schema": {
                     "$ref": "#/definitions/Portforwards"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such vmnet",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      },
      "/vmnet/{vmnet}/portforward/{protocol}/{port}": {
         "put": {
            "tags": [
               "Host Networks Management"
            ],
            "summary": "Updates the port forwarding",
            "operationId": "updatePortforward",
            "parameters": [
               {
                  "name": "vmnet",
                  "in": "path",
                  "description": "NAT type of virtual network",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "protocol",
                  "in": "path",
                  "description": "Protocol type: tcp, udp",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "port",
                  "in": "path",
                  "description": "Host port number",
                  "required": true,
                  "type": "integer",
                  "format": "int16"
               },
               {
                  "name": "parameters",
                  "in": "body",
                  "description": "Guest to forward to",
                  "required": true,
                  "schema": {
                     "$ref": "#/definitions/PortforwardParameter"
                  }
               }
            ],
            "responses": {
               "200": {
                  "description": "Port forwarding updated",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such resource",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         },
         "delete": {
            "tags": [
               "Host Networks Management"
            ],
            "summary": "Delete the port forwarding",
            "operationId": "deletePortforward",
            "parameters": [
               {
                  "name": "vmnet",
                  "in": "path",
                  "description": "NAT type of virtual network",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "protocol",
                  "in": "path",
                  "description": "Protocol type: tcp, udp",
                  "required": true,
                  "type": "string"
               },
               {
                  "name": "port",
                  "in": "path",
                  "description": "Host port number",
                  "required": true,
                  "type": "integer",
                  "format": "int16"
               }
            ],
            "responses": {
               "204": {
                  "description": "Port forwarding deleted"
               },
               "400": {
                  "description": "Invalid parameters",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "401": {
                  "description": "Authentication failed",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "403": {
                  "description": "Permission denied",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "404": {
                  "description": "No such resource",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "406": {
                  "description": "Content type was not supported",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "500": {
                  "description": "Server error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               },
               "default": {
                  "description": "Unexpected error",
                  "schema": {
                     "$ref": "#/definitions/ErrorModel"
                  }
               }
            }
         }
      }
   },
   "definitions": {
      "VMParameter": {
         "type": "object",
         "properties": {
            "processors": {
               "$ref": "#/definitions/VMProcessors"
            },
            "memory": {
               "$ref": "#/definitions/VMMemory"
            }
         }
      },
      "VMInformation": {
         "type": "object",
         "required": [
            "id"
         ],
         "properties": {
            "id": {
               "type": "string"
            },
            "cpu": {
               "$ref": "#/definitions/VMCPU"
            },
            "memory": {
               "$ref": "#/definitions/VMMemory"
            }
         }
      },
      "VMCloneParameter": {
         "type": "object",
         "required": [
            "name",
            "parentId"
         ],
         "properties": {
            "name": {
               "description": "New VM name",
               "type": "string"
            },
            "parentId": {
               "description": "Existing VM ID to clone.",
               "type": "string"
            }
         }
      },
      "VMID": {
         "required": [
            "id",
            "path"
         ],
         "properties": {
            "id": {
               "type": "string",
               "description": "ID of the VM"
            },
            "path": {
               "type": "string",
               "description": "Path of the VM"
            }
         }
      },
      "VMPowerState": {
         "type": "object",
         "required": [
            "power_state"
         ],
         "properties": {
            "power_state": {
               "type": "string",
               "enum": [
                  "poweredOn",
                  "poweredOff",
                  "paused",
                  "suspended"
               ]
            }
         }
      },
      "VMCPU": {
         "description": "The CPU information of VM",
         "type": "object",
         "readOnly": true,
         "properties": {
            "processors": {
               "$ref": "#/definitions/VMProcessors"
            }
         }
      },
      "VMProcessors": {
         "description": "Number of processor cores",
         "type": "integer",
         "format": "int32",
         "readOnly": true,
         "default": 1
      },
      "VMMemory": {
         "description": "Memory size in mega bytes",
         "type": "integer",
         "format": "int32",
         "readOnly": true,
         "default": 512
      },
      "VMPowerOperation": {
         "type": "string",
         "enum": [
            "on",
            "off",
            "shutdown",
            "suspend",
            "pause",
            "unpause"
         ]
      },
      "SharedFolder": {
         "required": [
            "folder_id",
            "host_path",
            "flags"
         ],
         "properties": {
            "folder_id": {
               "type": "string",
               "description": "ID of folder which be mounted to the host"
            },
            "host_path": {
               "type": "string",
               "description": "Path of the host shared folder"
            },
            "flags": {
               "type": "integer",
               "description": "The flags property specifies how the folder will be accessed by the VM.\nThere is only one flag supported which is \"4\" and means read/write access.\n"
            }
         }
      },
      "SharedFolders": {
         "description": "The shared folders mounted to this VM",
         "type": "array",
         "items": {
            "$ref": "#/definitions/SharedFolder"
         }
      },
      "SharedFolderParameter": {
         "required": [
            "host_path",
            "flags"
         ],
         "properties": {
            "host_path": {
               "type": "string",
               "description": "Path of the host shared folder"
            },
            "flags": {
               "type": "integer",
               "description": "The flags property specifies how the folder will be accessed by the VM.\nThere is only one flag supported which is \"4\" and means read/write access.\n"
            }
         }
      },
      "NICDevice": {
         "required": [
            "index",
            "type",
            "vmnet"
         ],
         "properties": {
            "index": {
               "type": "integer",
               "description": "The index of network adapter"
            },
            "type": {
               "type": "string",
               "description": "The network type of network adapter",
               "enum": [
                  "bridged",
                  "nat",
                  "hostonly",
                  "custom"
               ]
            },
            "vmnet": {
               "type": "string",
               "description": "The vmnet name"
            }
         }
      },
      "NICDevices": {
         "description": "The list of network adapters",
         "type": "object",
         "required": [
            "num",
            "nics"
         ],
         "properties": {
            "num": {
               "$ref": "#/definitions/Number"
            },
            "nics": {
               "description": "The network adapter added to this VM",
               "type": "array",
               "items": {
                  "$ref": "#/definitions/NICDevice"
               }
            }
         }
      },
      "NICDeviceParameter": {
         "required": [
            "type",
            "vmnet"
         ],
         "properties": {
            "type": {
               "type": "string",
               "description": "The network type of network adapter",
               "enum": [
                  "custom",
                  "bridged",
                  "nat",
                  "hostonly"
               ]
            },
            "vmnet": {
               "type": "string",
               "description": "The vmnet name, it should only be used while type is custom"
            }
         }
      },
      "Network": {
         "description": "The virtual network",
         "required": [
            "name",
            "type",
            "dhcp",
            "subnet",
            "mask"
         ],
         "properties": {
            "name": {
               "type": "string",
               "description": "name of virtual network"
            },
            "type": {
               "type": "string",
               "enum": [
                  "bridged",
                  "nat",
                  "hostOnly"
               ]
            },
            "dhcp": {
               "type": "string",
               "enum": [
                  "true",
                  "false"
               ]
            },
            "subnet": {
               "type": "string"
            },
            "mask": {
               "type": "string"
            }
         }
      },
      "Networks": {
         "description": "The list of virtual networks",
         "type": "object",
         "required": [
            "num",
            "vmnets"
         ],
         "properties": {
            "num": {
               "$ref": "#/definitions/Number"
            },
            "vmnets": {
               "description": "The list of virtual networks",
               "type": "array",
               "items": {
                  "$ref": "#/definitions/Network"
               }
            }
         }
      },
      "Portforward": {
         "description": "The port forwarding",
         "required": [
            "port",
            "protocol",
            "desc",
            "guest"
         ],
         "properties": {
            "port": {
               "$ref": "#/definitions/Port"
            },
            "protocol": {
               "type": "string",
               "enum": [
                  "tcp",
                  "udp"
               ]
            },
            "desc": {
               "type": "string"
            },
            "guest": {
               "required": [
                  "ip",
                  "port"
               ],
               "properties": {
                  "ip": {
                     "type": "string"
                  },
                  "port": {
                     "$ref": "#/definitions/Port"
                  }
               }
            }
         }
      },
      "Portforwards": {
         "description": "The list of port forwarding",
         "type": "object",
         "required": [
            "num",
            "port_forwardings"
         ],
         "properties": {
            "num": {
               "$ref": "#/definitions/Number"
            },
            "port_forwardings": {
               "description": "The list of port forwardings",
               "type": "array",
               "items": {
                  "$ref": "#/definitions/Portforward"
               }
            }
         }
      },
      "PortforwardParameter": {
         "required": [
            "guestIp",
            "guestPort"
         ],
         "properties": {
            "guestIp": {
               "type": "string"
            },
            "guestPort": {
               "$ref": "#/definitions/Port"
            },
            "desc": {
               "type": "string"
            }
         }
      },
      "Number": {
         "description": "Number of items",
         "type": "integer",
         "format": "int32",
         "readOnly": true,
         "default": 0
      },
      "Port": {
         "description": "port of communication",
         "type": "integer",
         "format": "int16",
         "readOnly": true,
         "default": 0
      },
      "DaemonState": {
         "type": "string",
         "enum": [
            "on",
            "off"
         ]
      },
      "ErrorModel": {
         "required": [
            "code",
            "message"
         ],
         "properties": {
            "code": {
               "type": "integer",
               "format": "int32"
            },
            "message": {
               "type": "string"
            }
         }
      }
   }
}